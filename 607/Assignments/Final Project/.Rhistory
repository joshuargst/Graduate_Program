y = "Raw Water pH",
subtitle = paste0("Y = ",round(m$coefficients[[2]],2),"x + ",round(m$coefficients[[1]],2),"\nR2 = ",round(summary(m)$r.squared,3)))+
ggsave(paste0(DirList[3],"ph",i,".png"),height = 6,width = 6)
ph_data%>%filter(is.na(DEP_pH_Bins)==FALSE)%>% ggplot()+geom_boxplot(aes(x = DEP_pH_Bins, y = RAW_Water))+
geom_jitter(aes(x = DEP_pH_Bins, y = RAW_Water))+theme_bw()
ph_data%>%filter(is.na(DEP_pH_Bins)==FALSE)%>% ggplot()+geom_boxplot(aes(x = DEP_pH_Bins, y = RAW_Water))+
geom_jitter(aes(x = DEP_pH_Bins, y = RAW_Water))+theme_bw()+
ggsave(paste0(DirList[3],"ph_box.png"),height = 10,width = 8)
ph_data%>%filter(is.na(DEP_pH_Bins)==FALSE)%>% ggplot()+geom_boxplot(aes(x = DEP_pH_Bins, y = RAW_Water))+
geom_jitter(aes(x = DEP_pH_Bins, y = RAW_Water))+theme_bw()+
ggsave(paste0(DirList[3],"ph_box.png"),height = 6,width = 7)
library(readxl)
library(dplyr)
library(tidyr)
library(stringr)
library(tidyverse)
library(httr)
library(rvest)
library(digest)
library(tidytext)
library(wordcloud)
library(RColorBrewer)
library(XML)
library(stringr)
library(ggplot2)
library(tm)
library(magrittr)
library(ggmap)
setwd('C:/Users/registejh/OneDrive - CDM Smith/Documents/CUNY SPS/Data 607/Assignments/Final Project')
setwd('C:/Users/registejh/OneDrive - CDM Smith/Documents/CUNY SPS/Data 607/Assignments/Final Project')
#write.csv(ArticleListings,"articlelistings.csv")
ArticleListings<-read.csv('articlelistings.csv')
wordextract<- function(dfcolumn){
descriptionwords <- dfcolumn %>% str_replace_all("^<[:graph:]*>$","")%>%
str_replace_all("\\\n"," ") %>%
str_replace_all("[^[:alpha:] ]"," ") %>% str_replace_all("\\s[:alpha:]{1,2}\\s","")%>% tolower()
#pulling all individual words into a dataframe and counting
word_counts <- as.data.frame(table(unlist(strsplit(descriptionwords, "\\s+"))))
colnames(word_counts)<-c("word","Freq")
#removing filler words and sentimental words
word_counts <-anti_join(word_counts,get_stopwords())%>%
anti_join(get_sentiments())
wordcloud(words = word_counts$word, freq = word_counts$Freq, min.freq = 1,
max.words=100, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
}
wordextract(ArticleListings$title)
install.packages('textdata')
wordextract(ArticleListings$title)
wordextract(ArticleListings$summary)
wordextract(ArticleListings$description)
GHG_Inventory<- read_csv("greenhouse_gas_inventory_data_data.csv")
GHG_unique_cat<-unique(GHG_Inventory$category)
GHG_unique_loc<-unique(GHG_Inventory$country_or_area)
powersales$DATE<-as.Date(powersales$DATE)
{
GHG_Inventory$category<- GHG_Inventory$category %>% str_replace_all(GHG_unique_cat[[2]],"GHG_Emissions_With_LULUCF")
GHG_Inventory$category<- GHG_Inventory$category %>% str_replace_all(GHG_unique_cat[[1]],"CO2_Emissions_Without_LULUCF")
GHG_Inventory$category<- GHG_Inventory$category %>% str_replace_all(GHG_unique_cat[[3]],"GHGEmissions_Without_LULUCF")
GHG_Inventory$category<- GHG_Inventory$category %>% str_replace_all(GHG_unique_cat[[4]],"HFC_Emissions")
GHG_Inventory$category<- GHG_Inventory$category %>% str_replace_all(GHG_unique_cat[[5]],"CH4_Emissions_Without_LULUCF")
GHG_Inventory$category<- GHG_Inventory$category %>% str_replace_all(GHG_unique_cat[[6]],"NF3_Emissions")
GHG_Inventory$category<- GHG_Inventory$category %>% str_replace_all(GHG_unique_cat[[7]],"N2O_Emissions_Without_LULUCF")
GHG_Inventory$category<- GHG_Inventory$category %>% str_replace_all(GHG_unique_cat[[8]],"PFC_Emissions")
GHG_Inventory$category<- GHG_Inventory$category %>% str_replace_all(GHG_unique_cat[[9]],"SF6_Emissions")
GHG_Inventory$category<- GHG_Inventory$category %>% str_replace_all(GHG_unique_cat[[10]],"HFC+PFC_Mixed_Emissions")
}
GHG_unique_cat<-unique(GHG_Inventory$category)
GHG_Inventoryfreq<-GHG_Inventory %>%filter(category==GHG_unique_cat[[1]]) %>%
group_by(country_or_area)%>%
mutate(percbyloc=value/sum(value))
library(rworldmap)
install.packages("rworldmap")
library(rworldmap)
map.world<-map_data("world")
GHG_Inventoryfreq$country_or_area<- str_replace_all(GHG_Inventoryfreq$country_or_area,"Russian Federation","Russia" )
GHG_Inventoryfreq$country_or_area<- str_replace_all(GHG_Inventoryfreq$country_or_area,"United Kingdom","UK" )
GHG_Inventoryfreq$country_or_area<- str_replace_all(GHG_Inventoryfreq$country_or_area,"United States of America","USA" )
map.world2<-left_join(map.world, GHG_Inventoryfreq, by=c('region'='country_or_area'))
unique(GHG_Inventoryfreq$country_or_area)
ggplot()+
theme(legend.title = "Percent")+
geom_map(data=map.world2, map=map.world2, aes(map_id=region, x=long, y=lat, fill=percbyloc))+
scale_fill_gradient(low = "lightblue",high = "purple", guide = "colourbar")+
coord_equal()+
labs(x = "Latitude",
y = 'Longitude',
title = 'Percent of global CO2 Emissions by Country')
ggplot()+
theme(legend.title = element_text("Percent"))+
geom_map(data=map.world2, map=map.world2, aes(map_id=region, x=long, y=lat, fill=percbyloc))+
scale_fill_gradient(low = "lightblue",high = "purple", guide = "colourbar")+
coord_equal()+
labs(x = "Latitude",
y = 'Longitude',
title = 'Percent of global CO2 Emissions by Country')
climatechange<-read_excel("climate_change_download_0.xls")
library(rpart)
library(rpart.plot)
#convert to long
climatechange_gather<-climatechange%>%gather(key = "DATE",value = "VALUE",-(1:6),(7:ncol(climatechange)))
climatechangeunique<-unique(climatechange_gather$`Series name`)
climatechange_gather<-climatechange_gather[c(2,4,7,8)]
climatechange_gather$VALUE<-as.numeric(climatechange_gather$VALUE)
ClimatechangeUS<-climatechange_gather%>%filter(`Country name`=="United States")#%>%group_by(`Series name`)%>%summarise(VALUE= mean(VALUE,na.rm = T))
ClimatechangeUSTree<- ClimatechangeUS %>% spread(`Series name`,VALUE)
View(ClimatechangeUSTree)
ClimatechangeUSTree<- ClimatechangeUS %>% spread(`Series name`,VALUE)
ClimatechangeUSTree$CO2Thresh<-ifelse(ClimatechangeUSTree$`CO2 emissions, total (KtCO2)`>=median(ClimatechangeUSTree$`CO2 emissions, total (KtCO2)`,na.rm = TRUE),"Yes","No")
ClimatechangeUSMatrix<-ClimatechangeUSTree[c(-1,-2,-13,-14)]
ClimatechangeUSTree<-ClimatechangeUSTree[c(-1,-2,-13,-14,-15)]
ClimatechangeUSTree <- ClimatechangeUSTree[,colSums(is.na(ClimatechangeUSTree))<nrow(ClimatechangeUSTree)-5]
ClimatechangeUSTree<- ClimatechangeUSTree%>%filter(is.na(CO2Thresh)==FALSE)
ClimatechangeUSTreeS<- sample_n(ClimatechangeUSTree,300,replace= TRUE)
SingleTree <- rpart(formula = CO2Thresh ~ .,
data = ClimatechangeUSTreeS,
method = 'class')
rpart.plot(x = SingleTree, yesno = 2, type = 5,extra = 108,tweak = 2, shadow.col = "lightgrey")
ntile(ClimatechangeUSMatrix$`CO2 emissions, total (KtCO2)`)
ntile(ClimatechangeUSMatrix$`CO2 emissions, total (KtCO2)`, 4)
ntile(ClimatechangeUSMatrix$`CO2 emissions, total (KtCO2)`, 10)
ntile(ClimatechangeUSMatrix$`CO2 emissions, total (KtCO2)`, 3)
ntile(ClimatechangeUSMatrix$`CO2 emissions, total (KtCO2)`, 4)
View(ClimatechangeUSMatrix)
ClimatechangeUSTree<- ClimatechangeUS %>% spread(`Series name`,VALUE)
ClimatechangeUSTree<- ClimatechangeUS %>% spread(`Series name`,VALUE)
ClimatechangeUSTree$CO2Thresh<-
ntile(ClimatechangeUSMatrix$`CO2 emissions, total (KtCO2)`, 4)
ClimatechangeUSTree$CO2Thresh<-as.factor(
ntile(ClimatechangeUSMatrix$`CO2 emissions, total (KtCO2)`, 4))
View(ClimatechangeUSTree)
as.factor(
ntile(ClimatechangeUSMatrix$`CO2 emissions, total (KtCO2)`, 4))
ClimatechangeUSTree$CO2Thresh<-
ntile(ClimatechangeUSMatrix$`CO2 emissions, total (KtCO2)`, 4)
ntile(ClimatechangeUSMatrix$`CO2 emissions, total (KtCO2)`, 4)
View(ClimatechangeUSTree)
ClimatechangeUSTree$CO2Thresh
ClimatechangeUSTree$CO2Thresh<-as.factor(
ntile(ClimatechangeUSMatrix$`CO2 emissions, total (KtCO2)`, 4))
ClimatechangeUSTree$CO2Thresh
ClimatechangeUSTree<-ClimatechangeUSTree[c(-1,-2,-13,-14,-15)]
ClimatechangeUSTree <- ClimatechangeUSTree[,colSums(is.na(ClimatechangeUSTree))<nrow(ClimatechangeUSTree)-5]
ClimatechangeUSTree<- ClimatechangeUSTree%>%filter(is.na(CO2Thresh)==FALSE)
ClimatechangeUSTreeS<- sample_n(ClimatechangeUSTree,300,replace= TRUE)
SingleTree <- rpart(formula = CO2Thresh ~ .,
data = ClimatechangeUSTreeS,
method = 'class')
rpart.plot(x = SingleTree, yesno = 2, type = 5,extra = 108,tweak = 2, shadow.col = "lightgrey")
ClimatechangeUSTreeS<- sample_n(ClimatechangeUSTree,500,replace= TRUE)
SingleTree <- rpart(formula = CO2Thresh ~ .,
data = ClimatechangeUSTreeS,
method = 'class')
rpart.plot(x = SingleTree, yesno = 2, type = 5,extra = 108,tweak = 2, shadow.col = "lightgrey")
ClimatechangeUSTreeS<- sample_n(ClimatechangeUSTree,10000,replace= TRUE)
SingleTree <- rpart(formula = CO2Thresh ~ .,
data = ClimatechangeUSTreeS,
method = 'class')
rpart.plot(x = SingleTree, yesno = 2, type = 5,extra = 108,tweak = 2, shadow.col = "lightgrey")
ClimatechangeUSTreeS<- sample_n(ClimatechangeUSTree,1000,replace= TRUE)
SingleTree <- rpart(formula = CO2Thresh ~ .,
data = ClimatechangeUSTreeS,
method = 'class')
rpart.plot(x = SingleTree, yesno = 2, type = 5,extra = 108,tweak = 2, shadow.col = "lightgrey")
rpart.plot(x = SingleTree, shadow.col = "lightgrey")
rpart.plot(x = SingleTree, yesno = 2, type = 5,extra = 108, shadow.col = "lightgrey")
rpart.plot(x = SingleTree, yesno = 2, type = 5,extra = 108,tweak = 2, shadow.col = "lightgrey")
rpart.plot(x = SingleTree, yesno = 2, type = 5,extra = 108,tweak = 1, shadow.col = "lightgrey")
ggplot()+
geom_line(powergeneration, mapping = aes(x= DATE, y = IPG22111NQ))+
labs(title = "Utility Power Generation in the US",
y = "",
x = "Year")
GHG_Inventory%>% #filter(category==GHG_unique_cat[1])%>%
filter(country_or_area==GHG_unique_loc[1])%>%
ggplot()+
geom_point(mapping = aes(year,value, color = category))
GHG_Inventory%>% filter(category==GHG_unique_cat[1])%>%
filter(country_or_area==GHG_unique_loc[1])%>%
ggplot()+
geom_point(mapping = aes(year,value, color = category))
GHG_Inventory%>% #filter(category==GHG_unique_cat[1])%>%
filter(country_or_area==GHG_unique_loc[1])%>%
ggplot()+
geom_point(mapping = aes(year,value, color = category))
GHG_Inventory%>% #filter(category==GHG_unique_cat[1])%>%
filter(country_or_area==GHG_unique_loc[1])%>%
ggplot()+
geom_point(mapping = aes(year,value, color = category))+facet_wrap(~category)
GHG_Inventory%>% #filter(category==GHG_unique_cat[1])%>%
filter(country_or_area==GHG_unique_loc[1])%>%
ggplot()+
geom_point(mapping = aes(year,value, color = category))+facet_wrap(~category,axis='free_y')
GHG_Inventory%>% #filter(category==GHG_unique_cat[1])%>%
filter(country_or_area==GHG_unique_loc[1])%>%
ggplot()+
geom_point(mapping = aes(year,value, color = category))+facet_wrap(~category,scales='free_y')
GHG_Inventory%>% #filter(category==GHG_unique_cat[1])%>%
filter(country_or_area==GHG_unique_loc[1])%>%
ggplot()+
geom_point(mapping = aes(year,value, color = category))+facet_wrap(~category,scales='free_y')+
theme(strip.text.y=element_blank())
GHG_Inventory%>% #filter(category==GHG_unique_cat[1])%>%
filter(country_or_area==GHG_unique_loc[1])%>%
ggplot()+
geom_point(mapping = aes(year,value, color = category))+facet_wrap(category~.,scales='free_y')+
theme(strip.text.y=element_blank())
GHG_Inventory%>% #filter(category==GHG_unique_cat[1])%>%
filter(country_or_area==GHG_unique_loc[1])%>%
ggplot()+
geom_point(mapping = aes(year,value, color = category))+facet_wrap(category~.,scales='free_y')+
theme(strip.text.x=element_blank())
GHG_Inventory%>% #filter(category==GHG_unique_cat[1])%>%
filter(country_or_area==GHG_unique_loc[1])%>%
ggplot()+
geom_point(mapping = aes(year,value, color = category))+facet_wrap(category~.,scales='free_y')+
theme(strip.text.x=element_blank(),legend.position = 'top')
GHG_Inventory%>% #filter(category==GHG_unique_cat[1])%>%
filter(country_or_area==GHG_unique_loc[1])%>%
ggplot()+
geom_point(mapping = aes(year,value, color = category))+facet_wrap(category~.,scales='free_y')+
theme(strip.text.x=element_blank(),legend.position = 'bottom')
GHG_Inventory%>% #filter(category==GHG_unique_cat[1])%>%
filter(country_or_area==GHG_unique_loc[1])%>%
ggplot()+
geom_point(mapping = aes(year,value, color = category))+facet_wrap(category~.,scales='free_y')+
theme(strip.text.x=element_blank(),legend.position = 'bottom', axis.text.y = element_text(angle = 90))
GHG_Inventory%>% #filter(category==GHG_unique_cat[1])%>%
filter(country_or_area==GHG_unique_loc[1])%>%
ggplot()+
geom_point(mapping = aes(year,value, color = category))+facet_wrap(category~.,scales='free_y')+
theme(strip.text.x=element_blank(),legend.position = 'bottom', axis.text.x = element_text(angle = 90))
GHG_Inventory%>% #filter(category==GHG_unique_cat[1])%>%
filter(country_or_area==GHG_unique_loc[1])%>%
ggplot()+
geom_point(mapping = aes(year,value, color = category))+geom_smooth(mapping = aes(year,value, color = category))+
facet_wrap(category~.,scales='free_y')+
theme(strip.text.x=element_blank(),legend.position = 'bottom', axis.text.x = element_text(angle = 90))+
labs(title = "Greenhouse Gas Emissions Over Time")
GHG_Inventory<- read_csv("greenhouse_gas_inventory_data_data.csv")
GHG_unique_cat<-unique(GHG_Inventory$category)
GHG_unique_loc<-unique(GHG_Inventory$country_or_area)
powersales$DATE<-as.Date(powersales$DATE)
{
GHG_Inventory$category<- GHG_Inventory$category %>% str_replace_all(GHG_unique_cat[[2]],"GHG_Emissions")
GHG_Inventory$category<- GHG_Inventory$category %>% str_replace_all(GHG_unique_cat[[1]],"CO2_Emissions")
GHG_Inventory$category<- GHG_Inventory$category %>% str_replace_all(GHG_unique_cat[[3]],"GHGEmissions_W/O_LULUCF")
GHG_Inventory$category<- GHG_Inventory$category %>% str_replace_all(GHG_unique_cat[[4]],"HFC_Emissions")
GHG_Inventory$category<- GHG_Inventory$category %>% str_replace_all(GHG_unique_cat[[5]],"CH4_Emissions")
GHG_Inventory$category<- GHG_Inventory$category %>% str_replace_all(GHG_unique_cat[[6]],"NF3_Emissions")
GHG_Inventory$category<- GHG_Inventory$category %>% str_replace_all(GHG_unique_cat[[7]],"N2O_Emissions")
GHG_Inventory$category<- GHG_Inventory$category %>% str_replace_all(GHG_unique_cat[[8]],"PFC_Emissions")
GHG_Inventory$category<- GHG_Inventory$category %>% str_replace_all(GHG_unique_cat[[9]],"SF6_Emissions")
GHG_Inventory$category<- GHG_Inventory$category %>% str_replace_all(GHG_unique_cat[[10]],"HFC+PFC")
}
GHG_unique_cat<-unique(GHG_Inventory$category)
GHG_unique_cat
GHG_Inventory<- read_csv("greenhouse_gas_inventory_data_data.csv")
GHG_unique_cat<-unique(GHG_Inventory$category)
GHG_unique_loc<-unique(GHG_Inventory$country_or_area)
GHG_Inventory$category %>% str_replace_all(GHG_unique_cat[[10]]
GHG_unique_cat[[10]]
GHG_unique_cat<-unique(GHG_Inventory$category)
GHG_unique_loc<-unique(GHG_Inventory$country_or_area)
GHG_unique_cat[[10]]
{
GHG_Inventory$category<- GHG_Inventory$category %>% str_replace_all(GHG_unique_cat[[2]],"GHG_Emissions")
GHG_Inventory$category<- GHG_Inventory$category %>% str_replace_all(GHG_unique_cat[[1]],"CO2_Emissions")
GHG_Inventory$category<- GHG_Inventory$category %>% str_replace_all(GHG_unique_cat[[3]],"GHGEmissions_W/O_LULUCF")
GHG_Inventory$category<- GHG_Inventory$category %>% str_replace_all(GHG_unique_cat[[4]],"HFC_Emissions")
GHG_Inventory$category<- GHG_Inventory$category %>% str_replace_all(GHG_unique_cat[[5]],"CH4_Emissions")
GHG_Inventory$category<- GHG_Inventory$category %>% str_replace_all(GHG_unique_cat[[6]],"NF3_Emissions")
GHG_Inventory$category<- GHG_Inventory$category %>% str_replace_all(GHG_unique_cat[[7]],"N2O_Emissions")
GHG_Inventory$category<- GHG_Inventory$category %>% str_replace_all(GHG_unique_cat[[8]],"PFC_Emissions")
GHG_Inventory$category<- GHG_Inventory$category %>% str_replace_all(GHG_unique_cat[[9]],"SF6_Emissions")
GHG_Inventory$category<- GHG_Inventory$category %>% str_replace_all(GHG_unique_cat[[10]],"HFC+PFC")
}
GHG_unique_cat<-unique(GHG_Inventory$category)
GHG_unique_cat[[10]]
GHG_Inventory$category<- GHG_Inventory$category %>% str_replace_all(GHG_unique_cat[[10]],"HFC\\+PFC")
GHG_unique_cat<-unique(GHG_Inventory$category)
GHG_unique_cat[[10]]
GHG_Inventoryfreq<-GHG_Inventory %>%filter(category==GHG_unique_cat[[1]]) %>%
group_by(country_or_area)%>%
mutate(percbyloc=value/sum(value))
map.world<-map_data("world")
GHG_Inventoryfreq$country_or_area<- str_replace_all(GHG_Inventoryfreq$country_or_area,"Russian Federation","Russia" )
GHG_Inventoryfreq$country_or_area<- str_replace_all(GHG_Inventoryfreq$country_or_area,"United Kingdom","UK" )
GHG_Inventoryfreq$country_or_area<- str_replace_all(GHG_Inventoryfreq$country_or_area,"United States of America","USA" )
map.world2<-left_join(map.world, GHG_Inventoryfreq, by=c('region'='country_or_area'))
ggplot()+
theme(legend.title = element_text("Percent"))+
geom_map(data=map.world2, map=map.world2, aes(map_id=region, x=long, y=lat, fill=percbyloc))+
scale_fill_gradient(low = "lightblue",high = "purple", guide = "colourbar")+
coord_equal()+
labs(x = "Latitude",
y = 'Longitude',
title = 'Percent of Global CO2 Emissions by Country')
GHG_Inventory%>% #filter(category==GHG_unique_cat[1])%>%
filter(country_or_area==GHG_unique_loc[1])%>%
ggplot()+
geom_point(mapping = aes(year,value, color = category))+geom_smooth(mapping = aes(year,value, color = category))+
facet_wrap(category~.,scales='free_y')+
theme(strip.text.x=element_blank(),legend.position = 'bottom', axis.text.x = element_text(angle = 90))+
labs(title = "Greenhouse Gas Emissions Over Time")
#convert to long
climatechange_gather<-climatechange%>%gather(key = "DATE",value = "VALUE",-(1:6),(7:ncol(climatechange)))
climatechangeunique<-unique(climatechange_gather$`Series name`)
climatechange_gather<-climatechange_gather[c(2,4,7,8)]
climatechange_gather$VALUE<-as.numeric(climatechange_gather$VALUE)
ClimatechangeUS<-climatechange_gather%>%filter(`Country name`=="United States")#%>%group_by(`Series name`)%>%summarise(VALUE= mean(VALUE,na.rm = T))
ClimatechangeUSTree<- ClimatechangeUS %>% spread(`Series name`,VALUE)
ClimatechangeUSTree$CO2Thresh<-ifelse(ClimatechangeUSTree$`CO2 emissions, total (KtCO2)`>=median(ClimatechangeUSTree$`CO2 emissions, total (KtCO2)`,na.rm = TRUE),"Yes","No")
ClimatechangeUSTree$CO2Thresh<-as.factor(
ntile(ClimatechangeUSMatrix$`CO2 emissions, total (KtCO2)`, 4))
ClimatechangeUSMatrix<-ClimatechangeUSTree[c(-1,-2,-13,-14)]
ClimatechangeUSTree<-ClimatechangeUSTree[c(-1,-2,-13,-14,-15)]
ClimatechangeUSTree <- ClimatechangeUSTree[,colSums(is.na(ClimatechangeUSTree))<nrow(ClimatechangeUSTree)-5]
ClimatechangeUSTree<- ClimatechangeUSTree%>%filter(is.na(CO2Thresh)==FALSE)
ClimatechangeUSTreeS<- sample_n(ClimatechangeUSTree,1000,replace= TRUE)
SingleTree <- rpart(formula = CO2Thresh ~ .,
data = ClimatechangeUSTreeS,
method = 'class')
rpart.plot(x = SingleTree, yesno = 2, type = 5,extra = 108,tweak = 1, shadow.col = "lightgrey")
library(ggcorrplot)
library(Hmisc)
View(ClimatechangeUSMatrix)
Pearson_Matrix<-function(Data,siglevel,statmethod,labsize){
#get all the numeric data out for meatrix
Data<-select(Data,which(sapply(Data,class)=="numeric"))
cor_data<- rcorr(as.matrix(Data),type = statmethod)
M <- cor_data$r
#p to designate significant correlations
p_mat <- cor_data$P
for(i in 1:ncol(Data)){
try(p_mat[i,i]<-0)
}
Matrix<-ggcorrplot(ClimatechangeUSMatrix,method = "square", colors = c("#E46726", "white","#6D9EC1"),lab = TRUE,
lab_size = labsize,type = "full", p.mat=p_mat, sig.level = siglevel,legend.title = statmethod,
title = paste0(statmethod," Correlation Matrix" ))
print(Matrix)
}
Pearson_Matrix<-function(Data,siglevel,statmethod,labsize){
#get all the numeric data out for meatrix
Data<-select(Data,which(sapply(Data,class)=="numeric"))
cor_data<- rcorr(as.matrix(Data),type = statmethod)
M <- cor_data$r
#p to designate significant correlations
p_mat <- cor_data$P
for(i in 1:ncol(Data)){
try(p_mat[i,i]<-0)
}
Matrix<-ggcorrplot(M,method = "square", colors = c("#E46726", "white","#6D9EC1"),lab = TRUE,
lab_size = labsize,type = "full", p.mat=p_mat, sig.level = siglevel,legend.title = statmethod,
title = paste0(statmethod," Correlation Matrix" ))
print(Matrix)
}
Pearson_Matrix(ClimatechangeUSMatrix,.5,"pearson",1)
Pearson_Matrix(ClimatechangeUSMatrix,.05,"pearson",1)
ClimatechangeUSMatrix<- ClimatechangeUSMatrix[-length(ClimatechangeUSMatrix)]
Pearson_Matrix(ClimatechangeUSMatrix,.05,"pearson",1)
Pearson_Matrix(ClimatechangeUSMatrix,.05,"Pearson",1)
Pearson_Matrix(ClimatechangeUSMatrix,.05,"pearson",1)
ClimatechangeUSMatrix<- ClimatechangeUSMatrix%>%filter(is.na(CO2Thresh)==FALSE)
ClimatechangeUSMatrix <- ClimatechangeUSMatrix[,colSums(is.na(ClimatechangeUSMatrix))<nrow(ClimatechangeUSMatrix)-5]
Pearson_Matrix(ClimatechangeUSMatrix,.05,"pearson",1)
Pearson_Matrix(ClimatechangeUSMatrix,.05,"pearson",3)
ClimatechangeUSMatrix <- ClimatechangeUSMatrix[,colSums(is.na(ClimatechangeUSMatrix))<nrow(ClimatechangeUSMatrix)-8]
View(ClimatechangeUSMatrix)
ClimatechangeUSMatrix <- ClimatechangeUSMatrix[,colSums(is.na(ClimatechangeUSMatrix))<nrow(ClimatechangeUSMatrix)-10]
ClimatechangeUSMatrix <- ClimatechangeUSMatrix[,colSums(is.na(ClimatechangeUSMatrix))<nrow(ClimatechangeUSMatrix)-12]
ClimatechangeUSMatrix <- ClimatechangeUSMatrix[,colSums(is.na(ClimatechangeUSMatrix))<nrow(ClimatechangeUSMatrix)-14]
ClimatechangeUSMatrix <- ClimatechangeUSMatrix[,colSums(is.na(ClimatechangeUSMatrix))<nrow(ClimatechangeUSMatrix)-15]
Pearson_Matrix(ClimatechangeUSMatrix,.05,"pearson",3)
library(readxl)
library(dplyr)
library(tidyr)
library(stringr)
library(tidyverse)
library(httr)
library(rvest)
library(digest)
library(tidytext)
library(wordcloud)
library(RColorBrewer)
library(XML)
library(stringr)
library(ggplot2)
library(tm)
library(magrittr)
library(rworldmap)
library(caret)
library(rpart)
library(rpart.plot)
library(ggcorrplot)
library(Hmisc)
ArticleListings<-read.csv('articlelistings.csv')
summary(ArticleListings)
head(ArticleListings,1)
head(ArticleListings,2)
table(head(ArticleListings,2))
table(head(ArticleListings,3))
library(data.table)
data.table(head(ArticleListings,3))
library(kable)
install.packages("kable")
library(knitr)
kable(head(ArticleListings))
kable(head(ArticleListings[c(1:3)],5))
library(DT)
?datatable
read_csv_chunked("https://www.kaggle.com/unitednations/international-greenhouse-gas-emissions/download")
read_csv.chunked("https://www.kaggle.com/unitednations/international-greenhouse-gas-emissions/download")
read_csv("https://www.kaggle.com/unitednations/international-greenhouse-gas-emissions/download")
View(read_csv("https://www.kaggle.com/unitednations/international-greenhouse-gas-emissions/download"))
read.csv("https://www.kaggle.com/unitednations/international-greenhouse-gas-emissions/download")
read.csv("https://www.kaggle.com/unitednations/international-greenhouse-gas-emissions/download")%>%View
ggplot()+
theme(legend.title = element_text("Percent"))+
geom_map(data=map.world2, map=map.world2, aes(map_id=region, x=long, y=lat, fill=percbyloc))+
scale_fill_gradient(low = "lightblue",high = "purple", guide = "colourbar")+
coord_equal()+
labs(x = "Latitude",
y = 'Longitude',
title = 'Percent of Global CO2 Emissions by Country')
GHG_Inventory%>% #filter(category==GHG_unique_cat[1])%>%
filter(country_or_area==GHG_unique_loc[1])%>%
ggplot()+
geom_point(mapping = aes(year,value, color = category))+geom_smooth(mapping = aes(year,value, color = category))+
facet_wrap(category~.,scales='free_y')+
theme(strip.text.x=element_blank(),legend.position = 'bottom', axis.text.x = element_text(angle = 90))+
labs(title = "U.S. Greenhouse Gas Emissions Over Time",
x = "Eq Metric Tons CO2",
y = "Year")
ClimatechangeUSTree<- ClimatechangeUS %>% spread(`Series name`,VALUE)
ClimatechangeUSTree$CO2Thresh<-as.factor(
ntile(ClimatechangeUSMatrix$`CO2 emissions, total (KtCO2)`, 4))
ClimatechangeUSMatrix<-ClimatechangeUSTree[c(-1,-2,-13,-14)]
ClimatechangeUSTree<-ClimatechangeUSTree[c(-1,-2,-13,-14,-15)]
ClimatechangeUSTree <- ClimatechangeUSTree[,colSums(is.na(ClimatechangeUSTree))<nrow(ClimatechangeUSTree)-5]
ClimatechangeUSTree<- ClimatechangeUSTree%>%filter(is.na(CO2Thresh)==FALSE)
ClimatechangeUSTreeS<- sample_n(ClimatechangeUSTree,1000,replace= TRUE)
SingleTree <- rpart(formula = CO2Thresh ~ .,
data = ClimatechangeUSTreeS,
method = 'class')
rpart.plot(x = SingleTree, yesno = 2, type = 5,extra = 108,tweak = 1, shadow.col = "lightgrey")
Pearson_Matrix<-function(Data,siglevel,statmethod,labsize){
#get all the numeric data out for meatrix
Data<-select(Data,which(sapply(Data,class)=="numeric"))
cor_data<- rcorr(as.matrix(Data),type = statmethod)
M <- cor_data$r
#p to designate significant correlations
p_mat <- cor_data$P
for(i in 1:ncol(Data)){
try(p_mat[i,i]<-0)
}
Matrix<-ggcorrplot(M,method = "square", colors = c("#E46726", "white","#6D9EC1"),lab = TRUE,
lab_size = labsize,type = "full", p.mat=p_mat, sig.level = siglevel,legend.title = statmethod,
title = paste0(statmethod," Correlation Matrix" ))
print(Matrix)
}
ClimatechangeUSMatrix<- ClimatechangeUSMatrix[-length(ClimatechangeUSMatrix)]
ClimatechangeUSMatrix <- ClimatechangeUSMatrix[,colSums(is.na(ClimatechangeUSMatrix))<nrow(ClimatechangeUSMatrix)-15]
ClimatechangeUSTreeS<- sample_n(ClimatechangeUSTree,1000,replace= TRUE)
Pearson_Matrix(ClimatechangeUSMatrix,.05,"pearson",3)
ClimatechangeUSTree<- ClimatechangeUS %>% spread(`Series name`,VALUE)
climatechange<-read_excel("climate_change_download_0.xls")
#convert to long
climatechange_gather<-climatechange%>%gather(key = "DATE",value = "VALUE",-(1:6),(7:ncol(climatechange)))
climatechangeunique<-unique(climatechange_gather$`Series name`)
climatechange_gather<-climatechange_gather[c(2,4,7,8)]
climatechange_gather$VALUE<-as.numeric(climatechange_gather$VALUE)
ClimatechangeUS<-climatechange_gather%>%filter(`Country name`=="United States")#%>%group_by(`Series name`)%>%summarise(VALUE= mean(VALUE,na.rm = T))
ClimatechangeUSTree<- ClimatechangeUS %>% spread(`Series name`,VALUE)
ClimatechangeUSTree$CO2Thresh<-as.factor(
ntile(ClimatechangeUSMatrix$`CO2 emissions, total (KtCO2)`, 4))
ClimatechangeUSTree<- ClimatechangeUS %>% spread(`Series name`,VALUE)
ClimatechangeUSTree$CO2Thresh<-as.factor(
ntile(ClimatechangeUSMatrix$`CO2 emissions, total (KtCO2)`, 4))
ClimatechangeUSTree<- ClimatechangeUS %>% spread(`Series name`,VALUE)
ClimatechangeUSTree$CO2Thresh<-as.factor(
ntile(ClimatechangeUSTree$`CO2 emissions, total (KtCO2)`, 4))
ClimatechangeUSMatrix<-ClimatechangeUSTree[c(-1,-2,-13,-14)]
ClimatechangeUSTree<-ClimatechangeUSTree[c(-1,-2,-13,-14,-15)]
ClimatechangeUSTree <- ClimatechangeUSTree[,colSums(is.na(ClimatechangeUSTree))<nrow(ClimatechangeUSTree)-5]
ClimatechangeUSTree<- ClimatechangeUSTree%>%filter(is.na(CO2Thresh)==FALSE)
ClimatechangeUSTreeS<- sample_n(ClimatechangeUSTree,1000,replace= TRUE)
SingleTree <- rpart(formula = CO2Thresh ~ .,
data = ClimatechangeUSTreeS,
method = 'class')
rpart.plot(x = SingleTree, yesno = 2, type = 5,extra = 108,tweak = 1, shadow.col = "lightgrey")
Pearson_Matrix<-function(Data,siglevel,statmethod,labsize){
#get all the numeric data out for meatrix
Data<-select(Data,which(sapply(Data,class)=="numeric"))
cor_data<- rcorr(as.matrix(Data),type = statmethod)
M <- cor_data$r
#p to designate significant correlations
p_mat <- cor_data$P
for(i in 1:ncol(Data)){
try(p_mat[i,i]<-0)
}
Matrix<-ggcorrplot(M,method = "square", colors = c("#E46726", "white","#6D9EC1"),lab = TRUE,
lab_size = labsize,type = "full", p.mat=p_mat, sig.level = siglevel,legend.title = statmethod,
title = paste0(statmethod," Correlation Matrix" ))
print(Matrix)
}
ClimatechangeUSMatrix<- ClimatechangeUSMatrix[-length(ClimatechangeUSMatrix)]
ClimatechangeUSMatrix <- ClimatechangeUSMatrix[,colSums(is.na(ClimatechangeUSMatrix))<nrow(ClimatechangeUSMatrix)-15]
ClimatechangeUSTreeS<- sample_n(ClimatechangeUSTree,1000,replace= TRUE)
Pearson_Matrix(ClimatechangeUSMatrix,.05,"pearson",3)
rpart.plot(x = SingleTree, yesno = 1, type = 5,extra = 108,tweak = 1, shadow.col = "lightgrey")
rpart.plot(x = SingleTree, yesno = 2, type = 5,extra = 108,tweak = 1, shadow.col = "lightgrey")
