x+y
jknj
#hbhj
#
x= 5
1+2
1+2
CDMSmith::cdm.project()
CDMSmith:::cdm.project()
install.packages("CDMSmith")
install.packages("C:/Users/REGISTEJH/Downloads/CDMSmith_latest.tar.gz", repos = NULL, type = "source")
CDMSmith::cdm.project()
CDMSmith:::cdm.project()
setwd('C:/Users/registejh/OneDrive - CDM Smith/Documents/CUNY SPS/606/Assignments')
library(DATA606)
###setwd first!!!!!
startLab('Lab6')
library(DATA606)
devtools::install_github("jbryer/DATA606")
library(tidyr)
options(digits=2)
data1 <- data.frame(x=c(10,8,13,9,11,14,6,4,12,7,5),
y=c(8.04,6.95,7.58,8.81,8.33,9.96,7.24,4.26,10.84,4.82,5.68))
data2 <- data.frame(x=c(10,8,13,9,11,14,6,4,12,7,5),
y=c(9.14,8.14,8.74,8.77,9.26,8.1,6.13,3.1,9.13,7.26,4.74))
data3 <- data.frame(x=c(10,8,13,9,11,14,6,4,12,7,5),
y=c(7.46,6.77,12.74,7.11,7.81,8.84,6.08,5.39,8.15,6.42,5.73))
data4 <- data.frame(x=c(8,8,8,8,8,8,8,19,8,8,8),
y=c(6.58,5.76,7.71,8.84,8.47,7.04,5.25,12.5,5.56,7.91,6.89))
?options
5.5435+234324.123
data1.x.mean <- mean(data1$x)
data1.y.mean <- mean(data1$y)
data2.x.mean <- mean(data2$x)
data2.y.mean <- mean(data2$y)
data3.x.mean <- mean(data3$x)
data3.y.mean <- mean(data3$y)
data4.x.mean <- mean(data4$x)
data4.y.mean <- mean(data4$y)
data1 <- data.frame(x=c(10,8,13,9,11,14,6,4,12,7,5),
y=c(8.04,6.95,7.58,8.81,8.33,9.96,7.24,4.26,10.84,4.82,5.68))
data2 <- data.frame(x=c(10,8,13,9,11,14,6,4,12,7,5),
y=c(9.14,8.14,8.74,8.77,9.26,8.1,6.13,3.1,9.13,7.26,4.74))
data3 <- data.frame(x=c(10,8,13,9,11,14,6,4,12,7,5),
y=c(7.46,6.77,12.74,7.11,7.81,8.84,6.08,5.39,8.15,6.42,5.73))
data4 <- data.frame(x=c(8,8,8,8,8,8,8,19,8,8,8),
y=c(6.58,5.76,7.71,8.84,8.47,7.04,5.25,12.5,5.56,7.91,6.89))
data1.x.mean <- mean(data1$x)
data1.y.mean <- mean(data1$y)
data2.x.mean <- mean(data2$x)
data2.y.mean <- mean(data2$y)
data3.x.mean <- mean(data3$x)
data3.y.mean <- mean(data3$y)
data4.x.mean <- mean(data4$x)
data4.y.mean <- mean(data4$y)
data4.y.mean
data1.x.mean <- mean(data1$x) %>% round(digits = 2)
data1.y.mean <- mean(data1$y) %>% round(digits = 2)
data2.x.mean <- mean(data2$x) %>% round(digits = 2)
data2.y.mean <- mean(data2$y) %>% round(digits = 2)
data3.x.mean <- mean(data3$x) %>% round(digits = 2)
data3.y.mean <- mean(data3$y) %>% round(digits = 2)
data4.x.mean <- mean(data4$x) %>% round(digits = 2)
data4.y.mean <- mean(data4$y) %>% round(digits = 2)
data1.x.median <- median(data1$x) %>% round(digits = 2)
data1.y.median <- median(data1$y) %>% round(digits = 2)
data2.x.median <- median(data2$x) %>% round(digits = 2)
data2.y.median <- median(data2$y) %>% round(digits = 2)
data3.x.median <- median(data3$x) %>% round(digits = 2)
data3.y.median <- median(data3$y) %>% round(digits = 2)
data4.x.median <- median(data4$x) %>% round(digits = 2)
data4.y.median <- median(data4$y) %>% round(digits = 2)
?cor
data1.correlation <- cor(data1$x,data1$y, method = "pearson") %>% round(digits = 2)
data1.correlation <- cor(data1, method = "pearson") %>% round(digits = 2)
View(data1.correlation)
data1.correlation <- cor(data1$x,data1$y, method = "pearson") %>% round(digits = 2)
data2.correlation <- cor(data2$x,data2$y, method = "pearson") %>% round(digits = 2)
data3.correlation <- cor(data3$x,data3$y, method = "pearson") %>% round(digits = 2)
data4.correlation <- cor(data4$x,data4$y, method = "pearson") %>% round(digits = 2)
data1.slope <- lm(data = data1,formula =  y~x)
data1.slope$coefficients
data1.slope$coefficients[2]
data1.slope$coefficients[[2]]
data1.slope$coefficients[,2]
data1.slope$coefficients[2,]
data1.slope$coefficients[[,2]]
data1.slope$coefficients[[2]]
data1.slope <- lm(data = data1,formula =  y~x)$coefficients[[2]]
data1.slope <- lm(data = data1,formula =  y~x)$coefficients[[2]]
data2.slope <- lm(data = data2,formula =  y~x)$coefficients[[2]]
data3.slope <- lm(data = data3,formula =  y~x)$coefficients[[2]]
data4.slope <- lm(data = data4,formula =  y~x)$coefficients[[2]]
data1.intercept <- lm(data = data1,formula =  y~x)$coefficients[[1]]
data2.intercept <- lm(data = data2,formula =  y~x)$coefficients[[1]]
data3.intercept <- lm(data = data3,formula =  y~x)$coefficients[[1]]
data4.intercept <- lm(data = data4,formula =  y~x)$coefficients[[1]]
data1.rsquared <- lm(data = data1,formula =  y~x)
data1.rsquared$model
data1.rsquared$df.residual
summary(data1.rsquared)$r.squared
summary(data1.rsquared)$adj.r.squared
data1.rsquared <- summary(lm(data = data1,formula =  y~x))$r.squared
data1.rsquared <- summary(lm(data = data1,formula =  y~x))$r.squared
data2.rsquared <- summary(lm(data = data2,formula =  y~x))$r.squared
data3.rsquared <- summary(lm(data = data3,formula =  y~x))$r.squared
data4.rsquared <- summary(lm(data = data4,formula =  y~x))$r.squared
##### DO NOT MODIFY THIS R BLOCK! ######
# This R block will create a table to display all the calculations above in one table.
library(knitr)
library(kableExtra)
library(kableExtra)
results <- data.frame(
data1.x = c(data1.x.mean, data1.x.median, data1.x.sd, data1.correlation, data1.intercept, data1.slope, data1.rsquared),
data1.y = c(data1.y.mean, data1.y.median, data1.y.sd, NA, NA, NA, NA),
data2.x = c(data2.x.mean, data2.x.median, data2.x.sd, data2.correlation, data2.intercept, data2.slope, data2.rsquared),
data2.y = c(data2.y.mean, data2.y.median, data2.y.sd, NA, NA, NA, NA),
data3.x = c(data3.x.mean, data3.x.median, data3.x.sd, data3.correlation, data3.intercept, data3.slope, data3.rsquared),
data3.y = c(data3.y.mean, data3.y.median, data3.y.sd, NA, NA, NA, NA),
data4.x = c(data4.x.mean, data4.x.median, data4.x.sd, data4.correlation, data4.intercept, data4.slope, data4.rsquared),
data4.y = c(data4.y.mean, data4.y.median, data4.y.sd, NA, NA, NA, NA),
stringsAsFactors = FALSE
)
row.names(results) <- c('Mean', 'Median', 'SD', 'r', 'Intercept', 'Slope', 'R-Squared')
names(results) <- c('x','y','x','y','x','y','x','y')
results <- data.frame(
data1.x = c(data1.x.mean, data1.x.median, data1.x.sd, data1.correlation, data1.intercept, data1.slope, data1.rsquared),
data1.y = c(data1.y.mean, data1.y.median, data1.y.sd, NA, NA, NA, NA),
data2.x = c(data2.x.mean, data2.x.median, data2.x.sd, data2.correlation, data2.intercept, data2.slope, data2.rsquared),
data2.y = c(data2.y.mean, data2.y.median, data2.y.sd, NA, NA, NA, NA),
data3.x = c(data3.x.mean, data3.x.median, data3.x.sd, data3.correlation, data3.intercept, data3.slope, data3.rsquared),
data3.y = c(data3.y.mean, data3.y.median, data3.y.sd, NA, NA, NA, NA),
data4.x = c(data4.x.mean, data4.x.median, data4.x.sd, data4.correlation, data4.intercept, data4.slope, data4.rsquared),
data4.y = c(data4.y.mean, data4.y.median, data4.y.sd, NA, NA, NA, NA),
stringsAsFactors = FALSE
)
plot(lm(data = data1, formula = y~x))
plot(lm(data = data1, formula = y~x))[2]
plot(lm(data = data1, formula = y~x)[2])
plot(lm(data = data1, formula = y~x)[[1]])
plot(lm(data = data1, formula = y~x)[[3]])
plot(lm(data = data1, formula = y~x)[[4]])
plot(lm(data = data1, formula = y~x))
par(mfrow=c(2,2))
plot(lm(data = data1, formula = y~x))
plot(data$x,data$y)
plot(data1$x,data1$y)
plot(lm(data = data1, formula = y~x), which = c(1,2,3,5))
plot(lm(data = data1, formula = y~x), which = c(1,2,3))
plot(lm(data = data1, formula = y~x), which = c(1,2))
tinytex:::install_prebuilt()
