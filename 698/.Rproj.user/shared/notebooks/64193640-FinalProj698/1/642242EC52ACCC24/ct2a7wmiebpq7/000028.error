{"frames":[{"func":"predict(dtmodel, Datatrain, type = \"class\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"predict.workflow(dtmodel, Datatrain, type = \"class\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"forge_predictors(new_data, workflow)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"hardhat::forge(new_data, blueprint = mold$blueprint)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"forge.data.frame(new_data, blueprint = mold$blueprint)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"blueprint$forge$process(blueprint = blueprint, predictors = predictors, \n    outcomes = outcomes, extras = extras)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"recipes::bake(object = rec, new_data = new_data)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"bake.recipe(object = rec, new_data = new_data)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"bake(step, new_data = new_data)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"bake.step_upsample(step, new_data = new_data)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"split(new_data, new_data[[object$column]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"split.data.frame(new_data, new_data[[object$column]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"lapply(split(x = seq_len(nrow(x)), f = f, drop = drop, ...), \n    function(ind) x[ind, , drop = FALSE])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"split(x = seq_len(nrow(x)), f = f, drop = drop, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"split.default(x = seq_len(nrow(x)), f = f, drop = drop, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in split.default(x = seq_len(nrow(x)), f = f, drop = drop, ...) : \n  group length is 0 but data length > 0\n"}