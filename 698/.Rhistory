set_engine(engine = "rpart")
dt_wf<-
workflow() %>%
add_model(tree_engine)
?step_downsample
?themis::step_downsample()
dt_recipe1<-
recipe(Chlorineexceedance ~ ., data = Datatrain) %>%
themis::step_downsample(Chlorineexceedance) %>%
step_naomit(all_outcomes()) %>%
step_nzv(all_predictors()) %>%
step_corr(all_numeric(), threshold = 0.7) %>%
step_other(all_nominal(), -all_outcomes()) %>%
step_impute_median(all_numeric()) %>%
step_impute_mode(all_nominal()) %>%
step_BoxCox(all_numeric()) %>%
step_dummy(all_nominal(), -all_outcomes())
dt_wf1<-
workflow() %>%
add_model(tree_engine) %>%
add_recipe(dt_recipe1)
wf1_results<-
dt_wf1 %>% fit_resamples(resamples= datacv,
metrics = metric_set(roc_auc, accuracy, sensitivity, specificity,kap),
control = control_resamples(save_pred = T))
dtmodel<-
dt_wf1 %>% fit(data = Datatrain)
caret::varImp(dtmodel$fit$fit$fit) %>% mutate(Feature = rownames(.)) %>%
ggplot(mapping = aes(x =fct_reorder(Feature,Overall), y = Overall))+
geom_col(fill ="skyblue3")+
coord_flip()+
defaulttheme+
labs(x = "Importance",
y = "Feature",
title = "Variable Importance")
wf1_results %>% collect_metrics(summarize = T)
default_removals<-
c("CHLORINE_RESIDUALMAX",
"CHLORINE_RESIDUALSMPL",
"Sheet",
"Date",
"Day",
"DAY",
"Year",
"Time",
"ResidualperTarget",
"CHL_RES_AT_TIME_OF_FECAL_SAMPLE"
"Date")
df1<-df %>%
select(-c(default_removals,
Chlorine_ResidualEffluent__mgperL_Daily_Average))
default_removals<-
c("CHLORINE_RESIDUALMAX",
"CHLORINE_RESIDUALSMPL",
"Sheet",
"Date",
"Day",
"DAY",
"Year",
"Time",
"ResidualperTarget",
"CHL_RES_AT_TIME_OF_FECAL_SAMPLE",
"Date")
df1<-df %>%
select(-c(default_removals,
Chlorine_ResidualEffluent__mgperL_Daily_Average))
df2<-df %>%
select(-c(Chlorineexceedance,
default_removals))
Datasplit<- initial_split(df1, prop = .75, strata = Chlorineexceedance)
Datasplit<- initial_split(df1, prop = .75, strata = Chlorineexceedance)
set.seed(1)
Datasplit<- initial_split(df1, prop = .75, strata = Chlorineexceedance)
Datatrain<-training(Datasplit)
datatest<-testing(Datasplit)
datacv<- vfold_cv(Datatrain, v = 10, strata = Chlorineexceedance)
tree_engine<-
decision_tree(mode = "classification") %>%
set_engine(engine = "rpart")
dt_wf<-
workflow() %>%
add_model(tree_engine)
dt_recipe1<-
recipe(Chlorineexceedance ~ ., data = Datatrain) %>%
themis::step_downsample(Chlorineexceedance) %>%
step_naomit(all_outcomes()) %>%
step_nzv(all_predictors()) %>%
step_corr(all_numeric(), threshold = 0.7) %>%
step_other(all_nominal(), -all_outcomes()) %>%
step_impute_median(all_numeric()) %>%
step_impute_mode(all_nominal()) %>%
step_BoxCox(all_numeric()) %>%
step_dummy(all_nominal(), -all_outcomes())
a<-dt_recipe1 %>% prep() %>% bake(Datatrain)
table(a$Chlorineexceedance)
dt_recipe1<-
recipe(Chlorineexceedance ~ ., data = Datatrain) %>%
themis::step_downsample(Chlorineexceedance, skip = F) %>%
step_naomit(all_outcomes()) %>%
step_nzv(all_predictors()) %>%
step_corr(all_numeric(), threshold = 0.7) %>%
step_other(all_nominal(), -all_outcomes()) %>%
step_impute_median(all_numeric()) %>%
step_impute_mode(all_nominal()) %>%
step_BoxCox(all_numeric()) %>%
step_dummy(all_nominal(), -all_outcomes())
a<-dt_recipe1 %>% prep() %>% bake(Datatrain)
a<-dt_recipe1 %>% prep() %>% bake(Datatrain)
table(a$Chlorineexceedance)
dt_wf1<-
workflow() %>%
add_model(tree_engine) %>%
add_recipe(dt_recipe1)
wf1_results<-
dt_wf1 %>% fit_resamples(resamples= datacv,
metrics = metric_set(roc_auc, accuracy, sensitivity, specificity,kap),
control = control_resamples(save_pred = T))
dtmodel<-
dt_wf1 %>% fit(data = Datatrain)
caret::varImp(dtmodel$fit$fit$fit) %>% mutate(Feature = rownames(.)) %>%
ggplot(mapping = aes(x =fct_reorder(Feature,Overall), y = Overall))+
geom_col(fill ="skyblue3")+
coord_flip()+
defaulttheme+
labs(x = "Importance",
y = "Feature",
title = "Variable Importance")
wf1_results %>% collect_metrics(summarize = T)
parsnip::show_engines("linear regression")
parsnip::show_engines("decision_tree")
parsnip::show_engines("rand_forest")
tree_engine<-
rand_forest(mode = "classification") %>%
set_engine(engine = "ranger")
dt_wf<-
workflow() %>%
add_model(tree_engine)
dt_recipe1<-
recipe(Chlorineexceedance ~ ., data = Datatrain) %>%
themis::step_downsample(Chlorineexceedance, skip = F) %>%
step_naomit(all_outcomes()) %>%
step_nzv(all_predictors()) %>%
step_corr(all_numeric(), threshold = 0.7) %>%
step_other(all_nominal(), -all_outcomes()) %>%
step_impute_median(all_numeric()) %>%
step_impute_mode(all_nominal()) %>%
step_BoxCox(all_numeric()) %>%
step_dummy(all_nominal(), -all_outcomes())
a<-dt_recipe1 %>% prep() %>% bake(Datatrain)
table(a$Chlorineexceedance)
dt_wf1<-
workflow() %>%
add_model(tree_engine) %>%
add_recipe(dt_recipe1)
wf1_results<-
dt_wf1 %>% fit_resamples(resamples= datacv,
metrics = metric_set(roc_auc, accuracy, sensitivity, specificity,kap),
control = control_resamples(save_pred = T))
wf1_results<-
dt_wf1 %>% fit_resamples(resamples= datacv,
metrics = metric_set(roc_auc, accuracy, sensitivity, specificity,kap),
control = control_resamples(save_pred = T))
dtmodel<-
dt_wf1 %>% fit(data = Datatrain)
dtmodel<-
dt_wf1 %>% fit(data = Datatrain)
caret::varImp(dtmodel$fit$fit$fit) %>% mutate(Feature = rownames(.)) %>%
ggplot(mapping = aes(x =fct_reorder(Feature,Overall), y = Overall))+
geom_col(fill ="skyblue3")+
coord_flip()+
defaulttheme+
labs(x = "Importance",
y = "Feature",
title = "Variable Importance")
dtmodel$fit$fit$fit$
caret::varImp(dtmodel$fit$fit) %>% mutate(Feature = rownames(.)) %>%
caret::varImp(dtmodel$fit$fit) %>% mutate(Feature = rownames(.)) %>%
ggplot(mapping = aes(x =fct_reorder(Feature,Overall), y = Overall))+
geom_col(fill ="skyblue3")+
coord_flip()+
defaulttheme+
labs(x = "Importance",
y = "Feature",
title = "Variable Importance")
importance(dtmodel)
importance(dtmodel$fit$fit)
importance(dtmodel$fit$fit$fit)
?ranger
tree_engine<-
rand_forest(mode = "classification") %>%
set_engine(engine = "ranger", importance = 'impurity')
dt_wf<-
workflow() %>%
add_model(tree_engine)
dt_recipe1<-
recipe(Chlorineexceedance ~ ., data = Datatrain) %>%
themis::step_downsample(Chlorineexceedance, skip = F) %>%
step_naomit(all_outcomes()) %>%
step_nzv(all_predictors()) %>%
step_corr(all_numeric(), threshold = 0.7) %>%
step_other(all_nominal(), -all_outcomes()) %>%
step_impute_median(all_numeric()) %>%
step_impute_mode(all_nominal()) %>%
step_BoxCox(all_numeric()) %>%
step_dummy(all_nominal(), -all_outcomes())
a<-dt_recipe1 %>% prep() %>% bake(Datatrain)
table(a$Chlorineexceedance)
dt_wf1<-
workflow() %>%
add_model(tree_engine) %>%
add_recipe(dt_recipe1)
wf1_results<-
dt_wf1 %>% fit_resamples(resamples= datacv,
metrics = metric_set(roc_auc, accuracy, sensitivity, specificity,kap),
control = control_resamples(save_pred = T))
dtmodel<-
dt_wf1 %>% fit(data = Datatrain)
importance(dtmodel$fit$fit$fit)
caret::varImp(dtmodel$fit$fit$fit) %>% mutate(Feature = rownames(.)) %>%
ggplot(mapping = aes(x =fct_reorder(Feature,Overall), y = Overall))+
geom_col(fill ="skyblue3")+
coord_flip()+
defaulttheme+
labs(x = "Importance",
y = "Feature",
title = "Variable Importance")
caret::varImp(dtmodel$fit$fit$fit$variable.importance) %>% mutate(Feature = rownames(.)) %>%
ggplot(mapping = aes(x =fct_reorder(Feature,Overall), y = Overall))+
geom_col(fill ="skyblue3")+
coord_flip()+
defaulttheme+
labs(x = "Importance",
y = "Feature",
title = "Variable Importance")
dtmodel$fit$fit$fit$variable.importance
importance(dtmodel$fit$fit$fit) %>% sort
arrange(-importance(dtmodel$fit$fit$fit))
sort(-importance(dtmodel$fit$fit$fit))
sort(-importance(dtmodel$fit$fit$fit)) %>% View
wf1_results %>% collect_metrics(summarize = T)
All_metrics<-data.frame()
wf_res_function<-
function(wf_results, modelname){
#this function calls returns the ROC_AUC, accuracy, and kap of a cross validated model result
All_metrics %>% bind_rows(
collect_metrics(wf_results, summarize = T) %>%
mutate(model = modelname))
}
wf1_results %>% collect_metrics(summarize = T)
conf_mat(dtmodel)
conf_mat(dtmodel$fit)
conf_mat(dtmodel$fit$fit)
dtmodel$fit$fit$fit$predictions
conf_mat(dtmodel$fit$fit$fit$predictions)
training_predictions<-
predict(dtmodel,Datatrain, type = "class") %>%
bind_cols(Datatrain$Loan_Status) %>%
rename("Chlorineexceedance"= "...2") %>%
mutate(set = "Training")
training_predictions<-
predict(dtmodel,Datatrain, type = "class") %>%
bind_cols(Datatrain$Chlorineexceedance) %>%
rename("Chlorineexceedance"= "...2") %>%
mutate(set = "Training")
training_predictions<-
predict(dtmodel,Datatrain, type = "class") #%>%
training_predictions<-
parsnip::predict(dtmodel,Datatrain, type = "class") #%>%
training_predictions<-
predict(dtmodel,Datatrain) #%>%
training_predictions<-
predict(dtmodel,Datatrain, type = "class") #%>%
Datatrain
dt_recipe1<-
recipe(Chlorineexceedance ~ ., data = Datatrain) %>%
#themis::step_downsample(Chlorineexceedance, skip = F) %>%
step_naomit(all_outcomes()) %>%
step_nzv(all_predictors()) %>%
step_corr(all_numeric(), threshold = 0.7) %>%
step_other(all_nominal(), -all_outcomes()) %>%
step_impute_median(all_numeric()) %>%
step_impute_mode(all_nominal()) %>%
step_BoxCox(all_numeric()) %>%
step_dummy(all_nominal(), -all_outcomes())
a<-dt_recipe1 %>% prep() %>% bake(Datatrain)
table(a$Chlorineexceedance)
dt_wf1<-
workflow() %>%
add_model(tree_engine) %>%
add_recipe(dt_recipe1)
dtmodel<-
dt_wf1 %>% fit(data = Datatrain)
caret::varImp(dtmodel$fit$fit$fit$variable.importance) %>% mutate(Feature = rownames(.)) %>%
ggplot(mapping = aes(x =fct_reorder(Feature,Overall), y = Overall))+
geom_col(fill ="skyblue3")+
coord_flip()+
defaulttheme+
labs(x = "Importance",
y = "Feature",
title = "Variable Importance")
importance(dtmodel$fit$fit$fit)
sort(-importance(dtmodel$fit$fit$fit))
wf1_results %>% collect_metrics(summarize = T)
training_predictions<-
predict(dtmodel,Datatrain, type = "class") #%>%
a$Chlorineexceedance
dt_recipe1<-
recipe(Chlorineexceedance ~ ., data = Datatrain) %>%
#themis::step_downsample(Chlorineexceedance, skip = F) %>%
step_naomit(all_outcomes()) %>%
step_nzv(all_predictors()-all_outcomes()) %>%
step_corr(all_numeric(), threshold = 0.7) %>%
step_other(all_nominal(), -all_outcomes()) %>%
step_impute_median(all_numeric()) %>%
step_impute_mode(all_nominal(), -all_outcomes()) %>%
step_BoxCox(all_numeric()) %>%
step_dummy(all_nominal(), -all_outcomes())
a<-dt_recipe1 %>% prep() %>% bake(Datatrain)
dt_recipe1<-
recipe(Chlorineexceedance ~ ., data = Datatrain) %>%
#themis::step_downsample(Chlorineexceedance, skip = F) %>%
step_naomit(all_outcomes()) %>%
step_nzv(all_predictors(),-all_outcomes()) %>%
step_corr(all_numeric(), threshold = 0.7) %>%
step_other(all_nominal(), -all_outcomes()) %>%
step_impute_median(all_numeric()) %>%
step_impute_mode(all_nominal(), -all_outcomes()) %>%
step_BoxCox(all_numeric()) %>%
step_dummy(all_nominal(), -all_outcomes())
a<-dt_recipe1 %>% prep() %>% bake(Datatrain)
table(a$Chlorineexceedance)
dt_wf1<-
workflow() %>%
add_model(tree_engine) %>%
add_recipe(dt_recipe1)
dtmodel<-
dt_wf1 %>% fit(data = Datatrain)
sort(-importance(dtmodel$fit$fit$fit))
training_predictions<-
predict(dtmodel,Datatrain, type = "class") #%>%
dt_recipe1<-
recipe(Chlorineexceedance ~ ., data = Datatrain) %>%
themis::step_downsample(Chlorineexceedance, skip = F) %>%
step_naomit(all_outcomes()) %>%
step_nzv(all_predictors(),-all_outcomes()) %>%
step_corr(all_numeric(), threshold = 0.7) %>%
step_other(all_nominal(), -all_outcomes()) %>%
step_impute_median(all_numeric()) %>%
step_impute_mode(all_nominal(), -all_outcomes()) %>%
step_BoxCox(all_numeric()) %>%
step_dummy(all_nominal(), -all_outcomes()) %>%
step_pca(all_predictors(), num_comp = 3)
a<-dt_recipe1 %>% prep() %>% bake(Datatrain)
dt_wf1<-
workflow() %>%
add_model(tree_engine) %>%
add_recipe(dt_recipe1)
wf1_results<-
dt_wf1 %>% fit_resamples(resamples= datacv,
metrics = metric_set(roc_auc, accuracy, sensitivity, specificity,kap),
control = control_resamples(save_pred = T))
dtmodel<-
dt_wf1 %>% fit(data = Datatrain)
sort(-importance(dtmodel$fit$fit$fit))
wf1_results %>% collect_metrics(summarize = T)
dt_recipe1<-
recipe(Chlorineexceedance ~ ., data = Datatrain) %>%
themis::step_downsample(Chlorineexceedance, skip = F) %>%
step_naomit(all_outcomes()) %>%
step_nzv(all_predictors(),-all_outcomes()) %>%
step_corr(all_numeric(), threshold = 0.7) %>%
step_other(all_nominal(), -all_outcomes()) %>%
step_impute_median(all_numeric()) %>%
step_impute_mode(all_nominal(), -all_outcomes()) %>%
step_BoxCox(all_numeric()) %>%
step_dummy(all_nominal(), -all_outcomes()) %>%
step_pca(all_predictors(), num_comp = 10)
table(a$Chlorineexceedance)
dt_wf1<-
workflow() %>%
add_model(tree_engine) %>%
add_recipe(dt_recipe1)
wf1_results<-
dt_wf1 %>% fit_resamples(resamples= datacv,
metrics = metric_set(roc_auc, accuracy, sensitivity, specificity,kap),
control = control_resamples(save_pred = T))
a$PC1
wf1_results<-
dt_wf1 %>% fit_resamples(resamples= datacv,
metrics = metric_set(roc_auc, accuracy, sensitivity, specificity,kap),
control = control_resamples(save_pred = T))
wf1_results %>% collect_metrics(summarize = T)
dt_recipe1<-
recipe(Chlorineexceedance ~ ., data = Datatrain) %>%
themis::step_downsample(Chlorineexceedance, skip = F) %>%
step_naomit(all_outcomes()) %>%
step_nzv(all_predictors(),-all_outcomes()) %>%
step_corr(all_numeric(), threshold = 0.7) %>%
step_other(all_nominal(), -all_outcomes()) %>%
step_impute_median(all_numeric()) %>%
step_impute_mode(all_nominal(), -all_outcomes()) %>%
step_BoxCox(all_numeric()) %>%
step_dummy(all_nominal(), -all_outcomes()) %>%
step_pca(all_predictors(), num_comp = 30)
dt_wf1<-
workflow() %>%
add_model(tree_engine) %>%
add_recipe(dt_recipe1)
wf1_results<-
dt_wf1 %>% fit_resamples(resamples= datacv,
metrics = metric_set(roc_auc, accuracy, sensitivity, specificity,kap),
control = control_resamples(save_pred = T))
wf1_results %>% collect_metrics(summarize = T)
dt_recipe1<-
recipe(Chlorineexceedance ~ ., data = Datatrain) %>%
themis::step_downsample(Chlorineexceedance, skip = F) %>%
step_naomit(all_outcomes()) %>%
step_nzv(all_predictors(),-all_outcomes()) %>%
step_corr(all_numeric(), threshold = 0.7) %>%
step_other(all_nominal(), -all_outcomes()) %>%
step_impute_median(all_numeric()) %>%
step_impute_mode(all_nominal(), -all_outcomes()) %>%
step_BoxCox(all_numeric()) %>%
step_dummy(all_nominal(), -all_outcomes()) #%>%
dt_wf1<-
workflow() %>%
add_model(tree_engine) %>%
add_recipe(dt_recipe1)
wf1_results<-
dt_wf1 %>% fit_resamples(resamples= datacv,
metrics = metric_set(roc_auc, accuracy, sensitivity, specificity,kap),
control = control_resamples(save_pred = T))
wf1_results<-
dt_wf1 %>% fit_resamples(resamples= datacv,
metrics = metric_set(roc_auc, accuracy, sensitivity, specificity,kap),
control = control_resamples(save_pred = T))
a<-dt_recipe1 %>% prep() %>% bake(Datatrain)
wf1_results %>% collect_metrics(summarize = T)
dt_recipe1<-
recipe(Chlorineexceedance ~ ., data = Datatrain) %>%
themis::step_upsample(Chlorineexceedance, skip = F) %>%
step_naomit(all_outcomes()) %>%
step_nzv(all_predictors(),-all_outcomes()) %>%
step_corr(all_numeric(), threshold = 0.7) %>%
step_other(all_nominal(), -all_outcomes()) %>%
step_impute_median(all_numeric()) %>%
step_impute_mode(all_nominal(), -all_outcomes()) %>%
step_BoxCox(all_numeric()) %>%
step_dummy(all_nominal(), -all_outcomes()) #%>%
a<-dt_recipe1 %>% prep() %>% bake(Datatrain)
table(a$Chlorineexceedance)
dt_wf1<-
workflow() %>%
add_model(tree_engine) %>%
add_recipe(dt_recipe1)
wf1_results<-
dt_wf1 %>% fit_resamples(resamples= datacv,
metrics = metric_set(roc_auc, accuracy, sensitivity, specificity,kap),
control = control_resamples(save_pred = T))
dtmodel<-
dt_wf1 %>% fit(data = Datatrain)
summary(dt_wf1)
training_predictions<-
predict(dtmodel,Datatrain, type = "class") #%>%
dt_recipe1<-
recipe(Chlorineexceedance ~ ., data = Datatrain) %>%
themis::step_downsample(Chlorineexceedance, skip = F) %>%
step_naomit(all_outcomes()) %>%
step_nzv(all_predictors(),-all_outcomes()) %>%
step_corr(all_numeric(), threshold = 0.7) %>%
step_other(all_nominal(), -all_outcomes()) %>%
step_impute_knn(all_numeric()) %>%
step_impute_mode(all_nominal(), -all_outcomes()) %>%
step_BoxCox(all_numeric()) %>%
step_dummy(all_nominal(), -all_outcomes()) #%>%
a<-dt_recipe1 %>% prep() %>% bake(Datatrain)
dt_recipe1<-
recipe(Chlorineexceedance ~ ., data = Datatrain) %>%
#themis::step_downsample(Chlorineexceedance, skip = F) %>%
step_naomit(all_outcomes()) %>%
step_nzv(all_predictors(),-all_outcomes()) %>%
step_corr(all_numeric(), threshold = 0.7) %>%
step_other(all_nominal(), -all_outcomes()) %>%
step_impute_knn(all_numeric()) %>%
step_impute_mode(all_nominal(), -all_outcomes()) %>%
step_BoxCox(all_numeric()) %>%
step_dummy(all_nominal(), -all_outcomes()) #%>%
a<-dt_recipe1 %>% prep() %>% bake(Datatrain)
dt_recipe1<-
recipe(Chlorineexceedance ~ ., data = Datatrain) %>%
themis::step_downsample(Chlorineexceedance, skip = F) %>%
step_naomit(all_outcomes()) %>%
step_nzv(all_predictors(),-all_outcomes()) %>%
step_corr(all_numeric(), threshold = 0.7) %>%
step_other(all_nominal(), -all_outcomes()) %>%
step_impute_bag(all_numeric()) %>%
step_impute_mode(all_nominal(), -all_outcomes()) %>%
step_BoxCox(all_numeric()) %>%
step_dummy(all_nominal(), -all_outcomes()) #%>%
a<-dt_recipe1 %>% prep() %>% bake(Datatrain)
dt_wf1<-
workflow() %>%
add_model(tree_engine) %>%
add_recipe(dt_recipe1)
wf1_results<-
dt_wf1 %>% fit_resamples(resamples= datacv,
metrics = metric_set(roc_auc, accuracy, sensitivity, specificity,kap),
control = control_resamples(save_pred = T))
dtmodel<-
dt_wf1 %>% fit(data = Datatrain)
sort(-importance(dtmodel$fit$fit$fit))
wf1_results %>% collect_metrics(summarize = T)
